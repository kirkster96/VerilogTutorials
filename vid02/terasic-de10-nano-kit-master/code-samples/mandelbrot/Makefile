#
# Copyright (c) 2017 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#

ifdef SOCEDS_DEST_ROOT
CROSS_COMPILE := $(SOCEDS_DEST_ROOT)/ds-5/sw/gcc/bin/arm-linux-gnueabihf-
CC := $(CROSS_COMPILE)gcc
endif

RM := rm -rf

VERSION_FILE := version.c
VERSION_NAME := \
$(strip \
  $(if \
    $(shell git rev-parse --verify --short HEAD 2>/dev/null), \
    $(join \
      $(shell git rev-parse --verify --short HEAD 2>/dev/null), \
      $(if \
        $(shell git diff-index --name-only HEAD 2>/dev/null), \
        -dirty \
      )\
    ), \
    no-repo \
  ) \
)

C_SRC := mandelbrot.c
C_SRC += $(VERSION_FILE)
C_SRC += gt_timer/gt_timer.c
C_SRC += de10_init/de10_init.c
C_SRC += mandelbrot_hw_engine/mandelbrot_hw_engine.c
C_SRC += fonts/cousine_bold_12.c
C_SRC += fonts/cousine_bold_14.c
C_SRC += fonts/cousine_bold_16.c
C_SRC += fonts/cousine_bold_18.c
C_SRC += fonts/cousine_bold_20.c
C_SRC += fonts/cousine_bold_30.c
C_SRC += font_support/font_control.c
C_SRC += pix_map_routines/pix_map_base_routines.c
C_SRC += do_fluid_movement/do_fluid_continuous_demo.c
C_SRC += do_fluid_movement/do_fluid_move.c
C_SRC += do_fluid_movement/do_fluid_zoom.c
C_SRC += do_fluid_movement/draw.c
C_SRC += gpio_support/gpio_support.c
C_SRC += menu_support/menu_support.c
C_SRC += console_support/console_support.c
C_SRC += menu_main/menu_main.c
C_SRC += menu_main/about_main_print.c
C_SRC += do_fluid_movement/calculate_cpu_load.c
C_SRC += mandelbrot_sw_neon_float/mandelbrot_sw_neon_float.c
C_SRC += mandelbrot_sw_neon_int/mandelbrot_sw_neon_int.c
C_SRC += mandelbrot_sw_float/mandelbrot_sw_float.c
C_SRC += mandelbrot_sw_int/mandelbrot_sw_int.c
C_SRC += mandelbrot_sw_support/mandelbrot_sw_support.c
C_SRC += menu_config_demo/menu_config_demo.c
C_SRC += menu_config_demo/menu_hw_config.c
C_SRC += menu_config_demo/menu_sw_config.c
C_SRC += menu_config_demo/menu_buf_vid_config.c
C_SRC += menu_config_demo/do_current_settings.c
C_SRC += menu_config_demo/about_config_demo_print.c
C_SRC += menu_algo_performance/menu_algo_performance.c
C_SRC += menu_algo_performance/menu_hw_performance.c
C_SRC += menu_algo_performance/menu_sw_performance.c
C_SRC += menu_algo_performance/do_algo_performance.c
C_SRC += menu_algo_performance/about_algo_performance_print.c
C_SRC += menu_algo_accuracy/menu_algo_accuracy.c
C_SRC += menu_algo_accuracy/do_algo_accuracy.c
C_SRC += menu_algo_accuracy/about_algo_accuracy_print.c
C_SRC += explore/explore.c
C_SRC += explore/menu_explore.c
C_SRC += explore/menu_change_iterations.c
C_SRC += explore/menu_change_zoom.c
C_SRC += explore/about_explore_print.c
C_SRC += explore/do_current_explore_print.c

ELF := $(basename $(firstword $(C_SRC)))
OBJ := $(patsubst %.c,%.o,$(C_SRC))

CFLAGS := -march=armv7-a
CFLAGS += -marm
CFLAGS += -mfloat-abi=hard
CFLAGS += -mfpu=neon
CFLAGS += -mvectorize-with-neon-double
CFLAGS += -O3
CFLAGS += -g
CFLAGS += -feliminate-unused-debug-types
CFLAGS += -fno-omit-frame-pointer
CFLAGS += -std=gnu99
CFLAGS += -W
CFLAGS += -Wall
CFLAGS += -Werror
CFLAGS += -Wc++-compat
CFLAGS += -Wwrite-strings
CFLAGS += -Wstrict-prototypes
CFLAGS += -ftree-slp-vectorize
CFLAGS += -ftree-vectorize
CFLAGS += -Wvector-operation-performance
CFLAGS += -pedantic
CFLAGS += -pthread
CFLAGS += -I.

LDFLAGS := -lm
LDFLAGS += -pthread

.PHONY: all clean make_version_string

all: make_version_string $(ELF)

clean:
	$(RM) $(ELF) $(OBJ) $(VERSION_FILE) benchmark.txt

make_version_string:
	@$(file  > $(VERSION_FILE),//)
	@$(file >> $(VERSION_FILE),// This file is generated by the Makefile)
	@$(file >> $(VERSION_FILE),//)
	@$(file >> $(VERSION_FILE),char g_version_str[] = "$(VERSION_NAME)";)

$(OBJ) : %.o : %.c
	$(CC) $(CFLAGS) -c $< -o $@

$(ELF): $(OBJ)
	$(CC) $(LDFLAGS) $(OBJ) -o $@

